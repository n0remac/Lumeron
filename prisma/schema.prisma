// prisma/schema.prisma
datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Design {
  id        String    @id @default(cuid())
  prompt    String
  tags      String    @default("")
  status    String    @default("draft") // draft|rendered|mocked|published
  assets    Asset[]
  products  Product[]
  createdAt DateTime  @default(now())
}

model Asset {
  id        String   @id @default(cuid())
  designId  String
  design    Design   @relation(fields: [designId], references: [id], onDelete: Cascade)
  kind      String   // source|print|mockup
  url       String
  width     Int
  height    Int
  dpi       Int?
  createdAt DateTime @default(now())
}

model Product {
  id           String      @id @default(cuid())
  designId     String
  design       Design      @relation(fields: [designId], references: [id], onDelete: Cascade)
  slug         String      @unique
  title        String
  description  String
  printifyId   String?     // product id on Printify
  optionsJson  String      // sizes/finishes JSON
  variantsJson String      @default("{}") // size/finish/price combinations for site sales
  listings     Listing[]
  orderItems   OrderItem[]
  createdAt    DateTime    @default(now())
}

model Listing {
  id         String   @id @default(cuid())
  productId  String
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  channel    String   // site|etsy|amazon
  externalId String?  // Etsy listing id, Amazon ASIN/Feed id
  status     String   @default("pending")
  priceCents Int
  seoTitle   String
  keywords   String   @default("")
  sales      Sale[]
  createdAt  DateTime @default(now())
}

model Sale {
  id         String   @id @default(cuid())
  listingId  String
  listing    Listing  @relation(fields: [listingId], references: [id], onDelete: Cascade)
  channel    String   // site|etsy|amazon
  qty        Int
  totalCents Int
  utmSource  String?  // tracking for your site
  createdAt  DateTime @default(now())
}

model Cart {
  id        String   @id @default(cuid())
  sessionId String   @unique
  itemsJson String   @default("[]") // JSON array of cart items
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id                    String      @id @default(cuid())
  orderNumber           String      @unique
  email                 String
  name                  String
  shippingAddressJson   String      // JSON object with address fields
  subtotalCents         Int
  shippingCents         Int
  totalCents            Int
  status                String      @default("pending") // pending|paid|fulfilled|cancelled
  stripePaymentIntentId String?     @unique
  items                 OrderItem[]
  createdAt             DateTime    @default(now())
  updatedAt             DateTime    @updatedAt
}

model OrderItem {
  id         String   @id @default(cuid())
  orderId    String
  order      Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  productId  String
  product    Product  @relation(fields: [productId], references: [id], onDelete: Restrict)
  title      String   // Product title snapshot
  size       String   // Selected size
  finish     String   // Selected finish
  quantity   Int
  priceCents Int      // Price per unit at time of purchase
  createdAt  DateTime @default(now())
}
